Object : object is a collection of key value pairs where each key is indexed to specific value. objects are represented by curly braces {}
let obj = {
    name:"raj",
    age: 25;
}
console.log(obj, obj.age,obj.name) // dot method
console.log(obj["name"],obj["age"]) //index signature

we can also create an object using Object.create method . it creates object with prototype ineritance

Object.freeze : it is used to freeze the object. it will not allow to add a property, remove a property or modify a property
     Object.freeze(objectName)

Object.seal : it is used to seal the object. it will not allow to add or remove the property but it allows to modify the properties
     Object.seal(objectName)

DOM(Document Object Model)
'document' is an object that contains complete structure of web page in tree like format. It allows to manipulate or interact with documents elements,attributes or context.
DOM Tree:
DOM selection : we can select any element from 'document' object using following methods
    i. getElementsByTagName('tagname'): it is used to select elements with a specific tag name and it returns an array of elements
    //select h1 using tag name
let x = document.getElementsByTagName('h1');
console.log(x[0]);
// change text inside
x[0].textContent = "Hello Everyone"
 

    ii. getElementsByClassName('className'): it is used to select  elements of specific class name and it returns an array of elements
    //select p with class name para using class name
let y = document.getElementsByClassName('empty');
console.log(y[0]);
// change text inside
y[0].textContent = "hfkjvhdfkjhkjfdhvjdfh"

    iii. getElementById('id'): it is used to select single element with specific id and it returns particular Id's element

     iv. querySelector('css selector'): it is used to select first element that matches the specified css selector
      //select p with class name para using class name
let y = document.querySelector('.empty');
console.log(y);
// change text inside
y.textContent = "hfkjvhdfkjhkjfdhvjdfh"
        
     v. querySelectorAll('css selector'): it is used to select all elements that matches the specified css selector

  Events:  Events are actions that occur when a user interacts with the web page such as clicking a button, submitting a form, scrolling a page, hovering over an element etc..,
  Those events can be handled using event handlers such as onClick

 DOM Manipulation : we can manipulate an element using below properties
    i. textContent : it is used to read or change the text inside an element
    ii. innerText : it is used to read or change the inside an element but it also loads CSS so incase of visibility hidden in css, it can't overpass it.
    iii. innerHTML : it is used to read or change HTML inside an element 
    iv. style: it is used to change or read styles of an element
    v. value : it is used to access /read or change the value of input
    vi. classList : it is used to add / remove / toggle the class names to elements

DOM Creation : we can even create elements using document object with methods such as

     createElement('elementName') : it will create element
     appendChild(childElement) : it will add element to HTML
     append(childElements) : it will add multiple elements to HTML

Events : Events are used to trigger based on users actions, 
 they trigger functions to perform certain task
 Based on user's action Events are divided as several types such as
 i. mouse events: Mouse Events are used when user did an action using mouse.
  eg: click, mouse over, mouse out etc..,

ii . keyboard events : keyboard Events are used when user did an action using keyboard
eg : keyUp,keyDown,keyPress etc.,
   Every time an event got triggered it passes an object to callback function called eventObject. it contains complete event details
write a js code to make a paragraph becomes red color when letter 'r' is pressed
document.addEventListener('keydown', function (e)
{
    if (e.key == 'r')
        document.getElementById("para").style.color = "red"
})

iii. Form Events : These events are used to get the details of inputs or form related from user
   There are different types of form events like 
    submit -- it is used to submit the entire form
    reset -- it is used whenever form details got reset
    change -- it is used when form input values got changed
    input -- it is used when form values got entered
    select -- it is used when an input value is selected
    focus -- it is used when an input value got focused
    etc..,

    













     

















































